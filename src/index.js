/**
 * Swagger QuikOpp
 * This is the swagger API for QuikOpp
 *
 * OpenAPI spec version: 1.0.0
 * Contact: qreateinc@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from './ApiClient';
import Address from './model/Address';
import ApiResponse from './model/ApiResponse';
import Body from './model/Body';
import Candidate from './model/Candidate';
import Company from './model/Company';
import History from './model/History';
import Job from './model/Job';
import User from './model/User';
import AuthApi from './api/AuthApi';
import CompanyApi from './api/CompanyApi';
import JobApi from './api/JobApi';
import UserApi from './api/UserApi';

/**
* This_is_the_swagger_API_for_QuikOpp.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var SwaggerQuikOpp = require('index'); // See note below*.
* var xxxSvc = new SwaggerQuikOpp.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new SwaggerQuikOpp.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new SwaggerQuikOpp.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new SwaggerQuikOpp.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Address model constructor.
     * @property {module:model/Address}
     */
    Address,

    /**
     * The ApiResponse model constructor.
     * @property {module:model/ApiResponse}
     */
    ApiResponse,

    /**
     * The Body model constructor.
     * @property {module:model/Body}
     */
    Body,

    /**
     * The Candidate model constructor.
     * @property {module:model/Candidate}
     */
    Candidate,

    /**
     * The Company model constructor.
     * @property {module:model/Company}
     */
    Company,

    /**
     * The History model constructor.
     * @property {module:model/History}
     */
    History,

    /**
     * The Job model constructor.
     * @property {module:model/Job}
     */
    Job,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
    * The AuthApi service constructor.
    * @property {module:api/AuthApi}
    */
    AuthApi,

    /**
    * The CompanyApi service constructor.
    * @property {module:api/CompanyApi}
    */
    CompanyApi,

    /**
    * The JobApi service constructor.
    * @property {module:api/JobApi}
    */
    JobApi,

    /**
    * The UserApi service constructor.
    * @property {module:api/UserApi}
    */
    UserApi
};
