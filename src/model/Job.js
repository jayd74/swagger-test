/**
 * Swagger QuikOpp
 * This is the swagger API for QuikOpp
 *
 * OpenAPI spec version: 1.0.0
 * Contact: qreateinc@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The Job model module.
* @module model/Job
* @version 1.0.0
*/
export default class Job {
    /**
    * Constructs a new <code>Job</code>.
    * @alias module:model/Job
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>Job</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Job} obj Optional instance to populate.
    * @return {module:model/Job} The populated <code>Job</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Job();
                        
            
            if (data.hasOwnProperty('jobID')) {
                obj['jobID'] = ApiClient.convertToType(data['jobID'], 'Number');
            }
            if (data.hasOwnProperty('companyId')) {
                obj['companyId'] = ApiClient.convertToType(data['companyId'], 'String');
            }
            if (data.hasOwnProperty('headline')) {
                obj['headline'] = ApiClient.convertToType(data['headline'], 'String');
            }
            if (data.hasOwnProperty('jobDescription')) {
                obj['jobDescription'] = ApiClient.convertToType(data['jobDescription'], 'String');
            }
            if (data.hasOwnProperty('jobType')) {
                obj['jobType'] = ApiClient.convertToType(data['jobType'], 'String');
            }
            if (data.hasOwnProperty('shiftPeriod')) {
                obj['shiftPeriod'] = ApiClient.convertToType(data['shiftPeriod'], 'String');
            }
            if (data.hasOwnProperty('shiftStartTime')) {
                obj['shiftStartTime'] = ApiClient.convertToType(data['shiftStartTime'], 'String');
            }
            if (data.hasOwnProperty('shiftEndTime')) {
                obj['shiftEndTime'] = ApiClient.convertToType(data['shiftEndTime'], 'String');
            }
            if (data.hasOwnProperty('skillCategory')) {
                obj['skillCategory'] = ApiClient.convertToType(data['skillCategory'], ['String']);
            }
            if (data.hasOwnProperty('skillSet')) {
                obj['skillSet'] = ApiClient.convertToType(data['skillSet'], ['String']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('appliedCandidates')) {
                obj['appliedCandidates'] = ApiClient.convertToType(data['appliedCandidates'], ['String']);
            }
            if (data.hasOwnProperty('acceptedCandidate')) {
                obj['acceptedCandidate'] = ApiClient.convertToType(data['acceptedCandidate'], 'String');
            }
            if (data.hasOwnProperty('feedback')) {
                obj['feedback'] = ApiClient.convertToType(data['feedback'], 'String');
            }
        }
        return obj;
    }

    /**
    * @member {Number} jobID
    */
    'jobID' = undefined;
    /**
    * @member {String} companyId
    */
    'companyId' = undefined;
    /**
    * up to 100 characters
    * @member {String} headline
    */
    'headline' = undefined;
    /**
    * up to 1000 characters
    * @member {String} jobDescription
    */
    'jobDescription' = undefined;
    /**
    * @member {module:model/Job.JobTypeEnum} jobType
    */
    'jobType' = undefined;
    /**
    * Morning, Afternoon, Evening
    * @member {String} shiftPeriod
    */
    'shiftPeriod' = undefined;
    /**
    * military time
    * @member {String} shiftStartTime
    */
    'shiftStartTime' = undefined;
    /**
    * military time
    * @member {String} shiftEndTime
    */
    'shiftEndTime' = undefined;
    /**
    * list from a ref table or enum
    * @member {Array.<String>} skillCategory
    */
    'skillCategory' = undefined;
    /**
    * list from a ref table or enum
    * @member {Array.<String>} skillSet
    */
    'skillSet' = undefined;
    /**
    * @member {module:model/Job.StatusEnum} status
    */
    'status' = undefined;
    /**
    * @member {Array.<String>} appliedCandidates
    */
    'appliedCandidates' = undefined;
    /**
    * userId
    * @member {String} acceptedCandidate
    */
    'acceptedCandidate' = undefined;
    /**
    * @member {String} feedback
    */
    'feedback' = undefined;



    /**
    * Allowed values for the <code>jobType</code> property.
    * @enum {String}
    * @readonly
    */
    static JobTypeEnum = {
        /**
         * value: "PartTime"
         * @const
         */
        "PartTime": "PartTime",
        /**
         * value: "Contract"
         * @const
         */
        "Contract": "Contract"    };
    /**
    * Allowed values for the <code>status</code> property.
    * @enum {String}
    * @readonly
    */
    static StatusEnum = {
        /**
         * value: "New"
         * @const
         */
        "New": "New",
        /**
         * value: "Open"
         * @const
         */
        "Open": "Open",
        /**
         * value: "Filled"
         * @const
         */
        "Filled": "Filled",
        /**
         * value: "Canceled"
         * @const
         */
        "Canceled": "Canceled",
        /**
         * value: "Closed"
         * @const
         */
        "Closed": "Closed"    };

}
